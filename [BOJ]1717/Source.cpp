//https://www.acmicpc.net/problem/1717

/*
집합의 표현 스페셜 저지 풀이
문제집
시간 제한	메모리 제한	제출	정답	맞은 사람	정답 비율
2 초	128 MB	8127	2626	1743	30.171%
문제
초기에 {0}, {1}, {2}, ... {n} 이 각각 n+1개의 집합을 이루고 있다. 여기에 합집합 연산과, 두 원소가 같은 집합에 포함되어 있는지를 확인하는 연산을 수행하려고 한다.

집합을 표현하는 프로그램을 작성하시오.

입력
첫째 줄에 n(1≤n≤1,000,000), m(1≤m≤100,000)이 주어진다. m은 입력으로 주어지는 연산의 개수이다. 다음 m개의 줄에는 각각의 연산이 주어진다. 합집합은 0 a b의 형태로 입력이 주어진다. 이는 a가 포함되어 있는 집합과, b가 포함되어 있는 집합을 합친다는 의미이다. 두 원소가 같은 집합에 포함되어 있는지를 확인하는 연산은 1 a b의 형태로 입력이 주어진다. 이는 a와 b가 같은 집합에 포함되어 있는지를 확인하는 연산이다. a와 b는 n 이하의 자연수또는 0이며 같을 수도 있다.

출력
1로 시작하는 입력에 대해서 한 줄에 하나씩 YES/NO로 결과를 출력한다. (yes/no 를 출력해도 된다)

예제 입력  복사
7 8
0 1 3
1 1 7
0 7 6
1 7 1
0 3 7
0 4 2
0 1 1
1 1 1
예제 출력  복사
NO
NO
YES
*/
#include <iostream>
#include <vector>
#include <string>
using namespace std;

vector<int> parents;

int find(int n) {
	if (parents[n] < 0) return n;
	parents[n] = find(parents[n]);
	return parents[n];
}

void merge(int a, int b) {
	a = find(a);
	b = find(b);
	if (a == b) return;
	if (parents[a] < parents[b]) {
		parents[a] += parents[b];
		parents[b] = a;
	}
	else {
		parents[b] += parents[a];
		parents[a] = b;
	}
}

string is_equls_root(int a, int b) {
	a = find(a);
	b = find(b);
	if (a == b) return string("YES");
	else return string("NO");
}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);

	int n, m;

	cin >> n >> m;

	parents = vector<int>(n + 1, -1);

	for (int i = 0; i < m; i++) {
		int operation, a, b;

		cin >> operation >> a >> b;

		if (operation == 0) {
			merge(a, b);
		}
		else {
			cout << is_equls_root(a, b) << "\n";
		}
	}
}